// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.234.0/containers/go
{
	"name": "Go",
	"build": {
		"dockerfile": "Dockerfile",
		"args": {
			// Update the VARIANT arg to pick a version of Go: 1, 1.18, 1.17
			// Append -bullseye or -buster to pin to an OS version.
			// Use -bullseye variants on local arm64/Apple Silicon.
			"VARIANT": "1.18",
			// Options
			"NODE_VERSION": "none"
		}
	},
	"runArgs": [
		"--cap-add=SYS_PTRACE",
		"--security-opt",
		"seccomp=unconfined"
	],
	// Use this environment variable if you need to bind mount your local source code into a new container.
	"remoteEnv": {
		"LOCAL_WORKSPACE_FOLDER": "${localWorkspaceFolder}"
	},
	// Set *default* container specific settings.json values on container create.
	"settings": {
		"go.toolsManagement.checkForUpdates": "local",
		"go.useLanguageServer": true,
		"go.gopath": "/go",
		"files.eol": "\n",
		"remote.extensionKind": {
			"ms-azuretools.vscode-docker": "workspace"
		},
		"editor.codeActionsOnSaveTimeout": 3000,
		"[go]": {
			"editor.formatOnSave": true,
			"editor.codeActionsOnSave": {
				"source.organizeImports": true
			},
			// Optional: Disable snippets, as they conflict with completion ranking.
			"editor.snippetSuggestions": "none"
		},
		"[go.mod]": {
			"editor.formatOnSave": true,
			"editor.codeActionsOnSave": {
				"source.organizeImports": true
			}
		},
		"gopls": {
			"usePlaceholders": false,
			"staticcheck": true,
			"experimentalWorkspaceModule": true
		},
		"go.autocompleteUnimportedPackages": true,
		"go.gotoSymbol.includeImports": true,
		"go.gotoSymbol.includeGoroot": true,
		"go.lintTool": "golangci-lint",
		"go.buildOnSave": "workspace",
		"go.lintOnSave": "workspace",
		"go.vetOnSave": "workspace",
		"editor.formatOnSave": true,
		"go.testFlags": [
			"-v",
			"-race"
		],
		"go.coverOnSingleTest": true,
		"go.coverOnSingleTestFile": true,
		"go.coverOnTestPackage": true
	},
	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [
		"golang.go",
		"eamodio.gitlens", // IDE Git information
		"davidanson.vscode-markdownlint",
		"ms-azuretools.vscode-docker", // Docker integration and linting
		"shardulm94.trailing-spaces", // Show trailing spaces
		"Gruntfuggly.todo-tree", // Highlights TODO comments
		"bierner.emojisense", // Emoji sense for markdown
		"stkb.rewrap", // rewrap comments after n characters on one line
		"vscode-icons-team.vscode-icons", // Better file extension icons
		"github.vscode-pull-request-github", // Github interaction
		"redhat.vscode-yaml", // Kubernetes, Drone syntax highlighting
		// "bajdzis.vscode-database", // Supports connections to mysql or postgres, over SSL, socked
		"IBM.output-colorizer", // Colorize your output/test logs
		"mohsen1.prettify-json", // Prettify JSON data
		"zxh404.vscode-proto3" // Supports Proto syntax
		// "jrebocho.vscode-random", // Generates random values
		// "alefragnani.Bookmarks", // Manage bookmarks
		// "quicktype.quicktype", // Paste JSON as code
		// "spikespaz.vscode-smoothtype", // smooth cursor animation
	],
	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],
	// Use 'postCreateCommand' to run commands after the container is created.
	// "postCreateCommand": "go version",
	// Comment out to connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
	"remoteUser": "vscode",
	"features": {
		"docker-from-docker": "20.10"
	}
}